{"version":3,"sources":["components/hoc/WithAuthRedirect.jsx","redux/dialogs-reducer.js","components/Profile/ProfileInfo/ProfileInfo.module.css","components/Profile/MyPosts/Post/Post.module.css","components/Navbar/Navbar.module.css","components/Users/Users.module.css","components/Navbar/Navbar.js","components/News/News.jsx","components/Music/Music.jsx","components/Settings/Settings.jsx","api/api.js","redux/users-reducer.js","assets/images/userImageDefault.jpg","components/Users/Paginator.jsx","components/Users/Users.jsx","assets/svg/Infinity-1.4s-200px.svg","components/Common/Preloader.jsx","redux/users-selectors.js","components/Users/UsersContainer.jsx","components/Profile/ProfileInfo/ProfileStatusWithHooks.jsx","components/Profile/ProfileInfo/ProfileInfo.jsx","redux/profile-reducer.js","components/Profile/MyPosts/Post/Post.jsx","components/Profile/MyPosts/MyPosts.jsx","components/Profile/MyPosts/MyPostsContainer.jsx","components/Profile/Profile.jsx","components/Profile/ProfileContainer.jsx","components/Header/Header.js","redux/auth-reduser.js","components/Header/HeaderContainer.js","components/Login/Login.jsx","redux/app-reduser.js","App.js","components/hoc/WithSuspense.js","redux/sidebar-reducer.js","redux/redux-store.js","index.js","utils/validators/validators.js","components/Common/FormsControls/FormsControls.js","components/Profile/MyPosts/MyPosts.module.css","components/Common/FormsControls/FormsControls.module.css","components/Header/Header.module.css"],"names":["mapStateToProps","state","isAuth","auth","WithAuthRedirect","Component","RedirectComponent","this","props","to","React","connect","SEND_MESSAGE","initialState","dialogs","id","name","messages","message","sendMessageCreator","type","dialogsReducer","action","newMessageBody","module","exports","Navbar","className","classes","nav","item","activeClassName","active","News","Music","Settings","instance","axios","withCredentials","baseURL","headers","usersAPI","currentPage","pageSize","get","then","response","data","post","delete","authAPI","email","password","rememberMe","profileAPI","status","put","FOLLOW","UNFOLLOW","SET_CURRENT_PAGE","SET_TOTAL_USERS_COUNT","SET_USERS","TOGGLE_IS_FETCHING","TOGGLE_IS_FOLLOWING_PROGRESS","users","totalItemsCount","isFetching","followingInProgress","followSuccess","unfollowSuccess","toggleIsFetching","toggleFollowing","toggleFollow","dispatch","methodAPI","actionCreator","a","resultCode","usersReducer","map","u","followed","totalCount","filter","Paginator","onPageChanged","portionSize","pagesCount","Math","ceil","pages","i","push","portionCount","useState","portionNumber","setPortionNumber","leftBorderPortion","rightBorderPortion","window","paginatorBody","paginatorButton","onClick","paginatorItems","page","event","pageItem","selectedPage","Users","avatar","src","photo","userDefaultImage","alt","disabled","some","unfollow","follow","Preloader","preloaderSVG","getUsers","usersPage","getPageSize","getCurrentPage","getFollowingInProgress","getTotalUsersCount","UsersContainer","pageNumber","dispatchACs","usersList","setCurrentPage","items","compose","ProfileStatusWithHooks","editMode","setEditMode","setStatus","useEffect","onDoubleClick","onChange","target","value","autoFocus","onBlur","updateStatus","ProfileInfo","profile","s","descriptionBlock","photos","large","ADD_POST","SET_USER_PROFILE","SET_STATUS","GET_STATUS","posts","likesCount","profileReducer","newPost","postBody","newPostText","Post","maxLength30","maxLengthCreator","NewPostForm","reduxForm","form","onSubmit","handleSubmit","Field","component","Textarea","placeholder","validate","required","MyPosts","postsElements","p","postsBlock","values","addPost","newPostBody","MyPostsContainer","profilePage","addPostActionCreator","Profile","ProfileContainer","console","log","match","params","authorizedUserId","getUser","getUserStatus","withRouter","Header","header","loginBlock","login","logOut","SET_USER_DATA","setUserData","payload","authMe","authReducer","HeaderContainer","LoginReduxForm","error","Input","logIn","length","stopSubmit","_error","formData","INITIALIZED_SUCCESS","initialized","appReducer","DialogsContainer","lazy","App","initializeApp","store","path","render","Suspense","fallback","app","sidebarReducer","reducers","combineReducers","dialogsPage","sidebar","formReducer","composeEnhancers","__REDUX_DEVTOOLS_EXTENSION_COMPOSE__","createStore","applyMiddleware","thunk","__store__","ReactDOM","document","getElementById","maxLength","FormControler","input","meta","hasError","touched","formControl","children","restProps","child"],"mappings":"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","file":"static/js/main.372da843.chunk.js","sourcesContent":["import React from 'react'\r\nimport {Redirect} from \"react-router-dom\";\r\nimport {connect} from \"react-redux\";\r\n\r\nconst mapStateToProps = (state) => {\r\n    return {\r\n        isAuth: state.auth.isAuth\r\n    }\r\n}\r\n\r\nexport const WithAuthRedirect = (Component) => {\r\n\r\n    class RedirectComponent extends React.Component {\r\n        render(){\r\n            if (!this.props.isAuth) return <Redirect to={'/login'} />\r\n\r\n            return <Component {...this.props} />\r\n        }\r\n    }\r\n\r\n    return connect(mapStateToProps)(RedirectComponent);\r\n}","const SEND_MESSAGE = 'SEND_MESSAGE';\r\n\r\nlet initialState = {\r\n    dialogs: [\r\n        {id: 1, name: 'Gwyn'},\r\n        {id: 2, name: 'Artorias'},\r\n        {id: 3, name: 'Gwynewere'},\r\n        {id: 4, name: 'Solar'},\r\n        {id: 5, name: 'Firekeeper'},\r\n        {id: 6, name: 'Sigward'}\r\n    ],\r\n    messages: [\r\n        {id: 1, message: 'Hi'},\r\n        {id: 2, message: 'How is your it-kamasutra?'},\r\n        {id: 3, message: 'Yo'},\r\n        {id: 4, message: 'Yo'},\r\n        {id: 5, message: 'Yo'}\r\n    ]\r\n};\r\n\r\nconst dialogsReducer = (state = initialState, action) => {\r\n\r\n    let stateCopy;\r\n\r\n    switch (action.type) {\r\n                case SEND_MESSAGE:\r\n            return stateCopy = {\r\n                ...state,\r\n                newMessageBody: '',\r\n                messages: [...state.messages, {id: 6, message: action.message}]\r\n            };\r\n\r\n        default:\r\n            return state;\r\n    }\r\n}\r\n\r\nexport const sendMessageCreator = (message) => ({type: SEND_MESSAGE, message: message})\r\n\r\nexport default dialogsReducer;","// extracted by mini-css-extract-plugin\nmodule.exports = {\"descriptionBlock\":\"ProfileInfo_descriptionBlock__1MWGv\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"item\":\"Post_item__3tt0v\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"nav\":\"Navbar_nav__2Db9x\",\"active\":\"Navbar_active__1OV-z\",\"item\":\"Navbar_item__9ALDR\",\"friends\":\"Navbar_friends__2DHV5\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"selectedPage\":\"Users_selectedPage__1mj-Q\",\"avatar\":\"Users_avatar__l9ksR\",\"paginatorButton\":\"Users_paginatorButton__3YNDc\",\"paginatorItems\":\"Users_paginatorItems__3XsvR\",\"pageItem\":\"Users_pageItem__20jt6\",\"paginatorBody\":\"Users_paginatorBody__12pg1\"};","import React from 'react';\r\nimport classes from './Navbar.module.css';\r\nimport {NavLink} from 'react-router-dom';\r\n\r\nfunction Navbar(props) {\r\n    return (\r\n        <div className={classes.nav}>\r\n            <div className={classes.item}>\r\n                <NavLink to='/profile' activeClassName={classes.active}>Profile</NavLink>\r\n            </div>\r\n            <div className={classes.item}>\r\n                <NavLink to='/dialogs' activeClassName={classes.active}>Messages</NavLink>\r\n            </div>\r\n            <div className={classes.item}>\r\n                <NavLink to='/users' activeClassName={classes.active}>Users</NavLink>\r\n            </div>\r\n            <div className={classes.item}>\r\n                <NavLink to='/news' activeClassName={classes.active}>News</NavLink>\r\n            </div>\r\n            <div className={classes.item}>\r\n                <NavLink to='/music' activeClassName={classes.active}>Music</NavLink>\r\n            </div>\r\n            <div className={classes.item}>\r\n                <NavLink to='/settings' activeClassName={classes.active}>Settings</NavLink>\r\n            </div>\r\n        </div>\r\n    )\r\n};\r\n\r\nexport default Navbar;","import React from 'react';\r\n\r\nfunction News() {\r\n    return (\r\n        <div> News </div>\r\n    )\r\n}\r\n\r\nexport default News;","import React from 'react';\r\n\r\nfunction Music() {\r\n    return (\r\n        <div> Music </div>\r\n\r\n    )\r\n}\r\n\r\nexport default Music;","import React from 'react';\r\n\r\nfunction Settings() {\r\n    return (\r\n        <div> Settings </div>\r\n    )\r\n}\r\n\r\nexport default Settings;","import * as axios from \"axios\";\r\n\r\nconst instance = axios.create({\r\n    withCredentials: true,\r\n    baseURL: 'https://social-network.samuraijs.com/api/1.0/',\r\n    headers: {\r\n        'API-KEY': '38a32d9f-993b-478b-b9ea-b8b42b661e3c'\r\n    }\r\n})\r\n\r\nexport const usersAPI = {\r\n    getUsers(currentPage = 1, pageSize = 10) {\r\n        return instance.get(`users?page=${currentPage}&count=${pageSize}`)\r\n            .then(response => {\r\n                return response.data\r\n            });\r\n    },\r\n    follow(id) {\r\n        return instance.post(`follow/${id}`)\r\n    },\r\n    unfollow(id) {\r\n        return instance.delete(`follow/${id}`)\r\n    }\r\n}\r\n\r\nexport const authAPI = {\r\n    me() {\r\n        return instance.get('auth/me')\r\n    },\r\n    login(email, password, rememberMe = false) {\r\n        return instance.post('auth/login', {email, password, rememberMe})\r\n    },\r\n    logout() {\r\n        return instance.delete('auth/login')\r\n    }\r\n}\r\n\r\nexport const profileAPI = {\r\n    getUser(id) {\r\n        return instance.get(`profile/${id}`)\r\n    },\r\n    getStatus(id) {\r\n        return instance.get(`profile/status/${id}`)\r\n    },\r\n    updateStatus(status) {\r\n        return instance.put(`profile/status/`, {status: status})\r\n    }\r\n}","import {usersAPI} from \"../api/api\";\r\n\r\n//ACTIONS CONST\r\n\r\nconst FOLLOW = 'FOLLOW';\r\nconst UNFOLLOW = 'UNFOLLOW';\r\nconst SET_CURRENT_PAGE = 'SET_CURRENT_PAGE';\r\nconst SET_TOTAL_USERS_COUNT = 'SET_TOTAL_USERS_COUNT';\r\nconst SET_USERS = 'SET_USERS';\r\nconst TOGGLE_IS_FETCHING = 'TOGGLE_IS_FETCHING';\r\nconst TOGGLE_IS_FOLLOWING_PROGRESS = 'TOGGLE_IS_FOLLOWING_PROGRESS';\r\n\r\nconst initialState = {\r\n    users: [],\r\n    pageSize: 10,\r\n    totalItemsCount: 0,\r\n    currentPage: 1,\r\n    isFetching: true,\r\n    followingInProgress: []\r\n}\r\n\r\n//REDUCER\r\n\r\nconst usersReducer = (state = initialState, action) => {\r\n\r\n    switch (action.type) {\r\n        case FOLLOW:\r\n            return {\r\n                ...state,\r\n                users: state.users.map(u => {\r\n                    if (u.id === action.id) {\r\n                        return {...u, followed: true}\r\n                    }\r\n                    return u;\r\n                })\r\n            }\r\n\r\n\r\n        case UNFOLLOW:\r\n            return {\r\n                ...state,\r\n                users: state.users.map(u => {\r\n                    if (u.id === action.id) {\r\n                        return {...u, followed: false}\r\n                    }\r\n                    return u;\r\n                })\r\n            }\r\n\r\n        case SET_CURRENT_PAGE:\r\n            return {\r\n                ...state,\r\n                currentPage: action.currentPage\r\n            }\r\n\r\n        case SET_TOTAL_USERS_COUNT:\r\n            return {\r\n                ...state,\r\n                totalItemsCount: action.totalCount\r\n            }\r\n\r\n        case SET_USERS:\r\n            return { ...state, users: [ ...action.users]};\r\n\r\n        case TOGGLE_IS_FETCHING:\r\n            return {...state, isFetching: action.isFetching};\r\n\r\n        case TOGGLE_IS_FOLLOWING_PROGRESS:\r\n            return {...state,\r\n                followingInProgress: action.followingInProgress\r\n                    ? [...state.followingInProgress, action.id]\r\n                    : state.followingInProgress.filter(id => id !== action.id)\r\n            }\r\n\r\n        default:\r\n            return state;\r\n    }\r\n}\r\n\r\n//ACTION CREATORS\r\n\r\nexport const followSuccess = (id) => ({type: FOLLOW, id: id});\r\nexport const unfollowSuccess = (id) => ({type: UNFOLLOW, id: id});\r\nexport const setCurrentPage = (currentPage) => ({type: SET_CURRENT_PAGE, currentPage: currentPage})\r\nexport const setTotalUsersCount = (totalCount) => ({type:SET_TOTAL_USERS_COUNT, totalCount: totalCount})\r\nexport const setUsers = (usersList) => ({type: SET_USERS, users: usersList});\r\nexport const toggleIsFetching = (isFetching) => ({type: TOGGLE_IS_FETCHING, isFetching: isFetching})\r\nexport const toggleFollowing = (followingInProgress, id) => ({type: TOGGLE_IS_FOLLOWING_PROGRESS, followingInProgress: followingInProgress, id: id})\r\n\r\n// THUNKS\r\n\r\nexport const requestUsers = (currentPage, pageSize) => {\r\n    return (dispatch) => {\r\n        dispatch(toggleIsFetching(true));\r\n\r\n        usersAPI.getUsers(currentPage, pageSize).then(data => {\r\n            dispatch(toggleIsFetching(false));\r\n            dispatch(setCurrentPage(currentPage));\r\n            dispatch(setUsers(data.items));\r\n            dispatch(setTotalUsersCount(data.totalCount))\r\n        })\r\n    }\r\n}\r\n\r\nexport const toggleFollow = async (dispatch, id, methodAPI, actionCreator) => {\r\n    dispatch(toggleFollowing(true, id));\r\n    let response = await methodAPI(id)\r\n\r\n    if (response.data.resultCode === 0) {\r\n        dispatch(actionCreator(id));\r\n    }\r\n    dispatch(toggleFollowing(false, id));\r\n}\r\n\r\nexport const follow = (id) =>  async dispatch => {\r\n    await toggleFollow(dispatch, id, usersAPI.follow, followSuccess)\r\n}\r\n\r\n\r\nexport const unfollow = (id) => async dispatch => {\r\n    await toggleFollow(dispatch, id, usersAPI.unfollow, unfollowSuccess)\r\n}\r\n\r\nexport default usersReducer;","export default __webpack_public_path__ + \"static/media/userImageDefault.b8cd16ab.jpg\";","import React, {useState} from 'react';\r\nimport classes from './Users.module.css'\r\n\r\n\r\nconst Paginator = ({totalItemsCount, pageSize, onPageChanged, currentPage, portionSize = 10}) => {\r\n\r\n    let pagesCount = Math.ceil(totalItemsCount / pageSize);\r\n    let pages = [];\r\n    for (let i = 1; i <= pagesCount; i++) {\r\n        pages.push(i);\r\n    }\r\n\r\n    let portionCount = Math.ceil(pagesCount / portionSize)\r\n    let [portionNumber, setPortionNumber] = useState(1)\r\n    let leftBorderPortion = (portionNumber - 1) * portionSize;\r\n    let rightBorderPortion = portionNumber * portionSize;\r\n\r\n    window.pages = pages;\r\n\r\n    return (\r\n        <div className={classes.paginatorBody}>\r\n            {portionNumber > 1 && <button className={classes.paginatorButton} onClick={() => {\r\n                setPortionNumber(portionNumber - 1)\r\n            }}>PREV</button>}\r\n            <div className={classes.paginatorItems}>\r\n                {pages.filter(page => page >= leftBorderPortion && page < rightBorderPortion)\r\n                    .map(page => {\r\n                        return <span onClick={(event) => {\r\n                            onPageChanged(page)\r\n                        }} className={classes.pageItem + ' ' + (currentPage === page && classes.selectedPage)}>{page}</span>\r\n                    })}\r\n            </div>\r\n            {portionNumber < portionCount && <button className={classes.paginatorButton} onClick={() => {\r\n                setPortionNumber(portionNumber + 1)\r\n            }}>NEXT</button>}\r\n        </div>\r\n    )\r\n}\r\n\r\nexport default Paginator;","import React from 'react';\r\nimport classes from './Users.module.css'\r\nimport userDefaultImage from \"../../assets/images/userImageDefault.jpg\";\r\nimport {NavLink} from \"react-router-dom\";\r\nimport Paginator from \"./Paginator\";\r\n\r\nconst Users = (props) => {\r\n\r\n\r\n    return (<div>\r\n        <Paginator {...props}/>\r\n\r\n        {props.users.map(item => {\r\n            return <div>\r\n            <span>\r\n                    <div>\r\n                        <NavLink to={'/profile/' + item.id}>\r\n                            <img className={classes.avatar} src={item.photo != null ? item.photo : userDefaultImage}\r\n                                 alt='ava'/>\r\n                        </NavLink>\r\n                    </div>\r\n                <div>\r\n                    {item.followed ?\r\n                        <button disabled={props.followingInProgress.some(id => id === item.id)} onClick={() => {\r\n                            props.unfollow(item.id)\r\n                        }}>Unfollow</button>\r\n                        : <button disabled={props.followingInProgress.some(id => id === item.id)} onClick={() => {\r\n                            props.follow(item.id)\r\n                        }}>Follow</button>}\r\n                </div>\r\n                <span>\r\n                    <span>\r\n                        <div>{item.name}</div>\r\n                        <div>{item.status}</div>\r\n                    </span>\r\n                    <span>\r\n                        <div>'UK'</div>\r\n                        <div>'London'</div>\r\n                    </span>\r\n                </span>\r\n            </span>\r\n            </div>\r\n        })}\r\n    </div>)\r\n}\r\n\r\nexport default Users;","export default __webpack_public_path__ + \"static/media/Infinity-1.4s-200px.adff80df.svg\";","import React from 'react';\r\nimport preloaderSVG from \"../../assets/svg/Infinity-1.4s-200px.svg\";\r\n\r\nlet Preloader = () => {\r\n    return <div>\r\n        <img src={preloaderSVG} alt={'Loading...'}/>\r\n    </div>\r\n}\r\n\r\nexport default Preloader;","import {createSelector} from \"reselect\";\r\n\r\nexport const getUsers = (state) => {\r\n    return state.usersPage.users\r\n}\r\n\r\nexport const getPageSize = (state) => {\r\n    return state.usersPage.pageSize\r\n}\r\n\r\nexport const getCurrentPage = (state) => {\r\n    return state.usersPage.currentPage\r\n}\r\n\r\nexport const getFollowingInProgress = (state) => {\r\n    return state.usersPage.followingInProgress\r\n}\r\n\r\nexport const getTotalUsersCount = (state) => {\r\n    return state.usersPage.totalItemsCount\r\n}\r\n\r\n//      Пример использования реселекта (сложных селекторов):\r\n//\r\n//       const getUsersSelector = (state) => {\r\n//           return state.usersPage.users;\r\n//       }\r\n//\r\n//       export const getUsersFilter = createSelector(getUsersSelector, (users) => {\r\n//           return users.filter( u => true)\r\n//       })\r\n/*\r\n\r\n    функция createSelector создает реселектор, она принимает в качестве зависимостей простые селекты из стейта (селекты без сложных вычислений),\r\n    при первом вызове реселекта значения зависимостей кешируются внутри реселекта, а при следующих вызовах дергаются простые селекторы\r\n    зависимости и их  значения сравниваются с кешироваными!\r\n    Если изменений по сравнению с кешем нет, то сразу возвращается кеншированный результат без запуска дорогого селектора,\r\n\r\n    если же что-то из зависимостей изменилось в стейте по сравнению с кешем то тогда уже вызывается\r\n    селектор с дорогими вычислениями!\r\n*/\r\n\r\n","import React from 'react';\r\nimport {connect} from \"react-redux\";\r\nimport {\r\n    follow, requestUsers,\r\n    toggleFollowing,\r\n    unfollow\r\n} from \"../../redux/users-reducer\";\r\nimport Users from \"./Users\";\r\nimport Preloader from \"../Common/Preloader\";\r\nimport {WithAuthRedirect} from \"../hoc/WithAuthRedirect\";\r\nimport {compose} from \"redux\";\r\nimport {\r\n    getCurrentPage,\r\n    getFollowingInProgress,\r\n    getPageSize,\r\n    getTotalUsersCount,\r\n    getUsers\r\n} from \"../../redux/users-selectors\";\r\n\r\n\r\nclass UsersContainer extends React.Component {\r\n\r\n    componentDidMount() {\r\n        this.props.getUsers(this.props.currentPage, this.props.pageSize);\r\n    };\r\n\r\n    onPageChanged = (pageNumber) => {\r\n        this.props.getUsers(pageNumber, this.props.pageSize);\r\n    }\r\n\r\n    render() {\r\n\r\n        return <>\r\n            {this.props.isFetching ? <Preloader/> : null}\r\n            <Users pageSize={this.props.pageSize}\r\n                   currentPage={this.props.currentPage}\r\n                   onPageChanged={this.onPageChanged}\r\n                   users={this.props.users}\r\n                   follow={this.props.follow}\r\n                   unfollow={this.props.unfollow}\r\n                   toggleFollowing={this.props.toggleFollowing}\r\n                   followingInProgress={this.props.followingInProgress}\r\n                   totalItemsCount={this.props.totalItemsCount}\r\n            />\r\n        </>\r\n    }\r\n}\r\n\r\nconst mapStateToProps = (state) => {\r\n    return {\r\n        users: getUsers(state),\r\n        pageSize: getPageSize(state),\r\n        currentPage: getCurrentPage(state),\r\n        followingInProgress: getFollowingInProgress(state),\r\n        totalItemsCount: getTotalUsersCount(state)\r\n    }\r\n}\r\n\r\nconst dispatchACs = {\r\n    follow,\r\n    unfollow,\r\n    toggleFollowing,\r\n    getUsers: requestUsers,\r\n}\r\n\r\nexport default compose(connect(mapStateToProps, dispatchACs), WithAuthRedirect)(UsersContainer);","import React, {useEffect, useState} from 'react'\r\n\r\nconst ProfileStatusWithHooks = (props) => {\r\n\r\n    const [editMode, setEditMode] = useState(false)\r\n    const [status, setStatus] = useState(props.status)\r\n\r\n    useEffect( () => {\r\n        setStatus(props.status)\r\n    }, [props.status])\r\n\r\n    const activateEditMode = () => {\r\n        setEditMode(true)\r\n    }\r\n\r\n    const deactivateEditMode = () => {\r\n        setEditMode(false)\r\n        props.updateStatus(status)\r\n    }\r\n\r\n    const statusOnChange = (event) => {\r\n        setStatus(event.target.value)\r\n    }\r\n\r\n\r\n\r\n        return (\r\n            <div>\r\n                {!editMode &&\r\n                    <div>\r\n                    <span onDoubleClick={activateEditMode}>{props.status || '-----'}</span>\r\n                </div>\r\n                }\r\n                {editMode &&\r\n                <div>\r\n                    <input onChange={statusOnChange} autoFocus={true} onBlur={deactivateEditMode} value={status}/>\r\n                </div>\r\n                }\r\n            </div>\r\n        )\r\n\r\n}\r\n\r\nexport default ProfileStatusWithHooks;","import React from 'react';\r\nimport s from './ProfileInfo.module.css';\r\nimport Preloader from \"../../Common/Preloader\";\r\nimport ProfileStatusWithHooks from \"./ProfileStatusWithHooks\";\r\n\r\nconst ProfileInfo = (props) => {\r\n    if (!props.profile) {\r\n        return <Preloader/>\r\n    } else {\r\n        return (\r\n            <div>\r\n                <div>\r\n                    <img\r\n                        src='https://i.pinimg.com/originals/58/01/cf/5801cfba80c2e2af9d4fef797e5834ec.png'/>\r\n                </div>\r\n                <div className={s.descriptionBlock}>\r\n                    <img src={props.profile.photos.large}/>\r\n                </div>\r\n                <ProfileStatusWithHooks status={props.status} updateStatus={props.updateStatus}/>\r\n            </div>\r\n        )\r\n    }\r\n}\r\n\r\nexport default ProfileInfo;","import {profileAPI} from \"../api/api\";\r\n\r\nconst ADD_POST = 'ADD-POST';\r\nconst SET_USER_PROFILE = 'SET_USER_PROFILE';\r\nconst SET_STATUS = 'SET_STATUS';\r\nconst GET_STATUS = 'GET_STATUS';\r\n\r\nlet initialState = {\r\n    posts: [\r\n        {id: 1, message: 'Hi, how are you?', likesCount: 12},\r\n        {id: 2, message: 'It\\'s my first post', likesCount: 11},\r\n        {id: 3, message: 'Blabla', likesCount: 11},\r\n        {id: 4, message: 'Dada', likesCount: 11}\r\n    ],\r\n    profile: null,\r\n    status: ''\r\n};\r\n\r\nconst profileReducer = (state = initialState, action) => {\r\n\r\n    let stateCopy;\r\n\r\n    switch (action.type) {\r\n        case ADD_POST:\r\n            let newPost = {\r\n                id: 5,\r\n                message: action.postBody,\r\n                likesCount: 0\r\n            };\r\n\r\n            return stateCopy = {\r\n                ...state,\r\n                newPostText: '',\r\n                posts: [...state.posts, newPost]\r\n            }\r\n\r\n        case SET_USER_PROFILE:\r\n            return {\r\n                ...state,\r\n                profile: {...action.profile}\r\n            }\r\n\r\n        case GET_STATUS:\r\n            return {\r\n                ...state,\r\n                status: action.status\r\n            }\r\n\r\n        case SET_STATUS:\r\n            return {\r\n                ...state,\r\n                status: action.status\r\n            }\r\n\r\n        default:\r\n            return state;\r\n    }\r\n}\r\n\r\n\r\nexport const addPostActionCreator = (postBody) => ({type: ADD_POST, postBody: postBody})\r\nexport const setUserProfile = (profile) => ({type: SET_USER_PROFILE, profile: profile})\r\nexport const setStatus = (status) => ({type: SET_STATUS, status: status})\r\nexport const getStatus = (status) => ({type: GET_STATUS, status: status})\r\n\r\n\r\nexport const getUser = (id) => dispatch => {\r\n    profileAPI.getUser(id)\r\n        .then(response => {\r\n            dispatch(setUserProfile(response.data));\r\n        })\r\n}\r\n\r\nexport const getUserStatus = (id) => dispatch => {\r\n    profileAPI.getStatus(id)\r\n        .then(response => {\r\n            dispatch(getStatus(response.data))\r\n        })\r\n}\r\n\r\nexport const updateStatus = (status) => dispatch => {\r\n    profileAPI.updateStatus(status)\r\n        .then(response => {\r\n            if (response.data.resultCode === 0){\r\n                dispatch(setStatus(status))\r\n        }})\r\n}\r\n\r\n\r\nexport default profileReducer;","import React from 'react';\r\nimport s from './Post.module.css';\r\n\r\nconst Post = (props) => {\r\n  return (\r\n    <div className={s.item}>\r\n      <img src='https://movies4maniacs.liberty.me/wp-content/uploads/sites/1218/2015/09/avatarsucks.jpg' />\r\n        { props.message }\r\n          <div>\r\n        <span>like</span> { props.likesCount }\r\n      </div>\r\n    </div>\r\n  )\r\n}\r\n\r\nexport default Post;","import React from 'react';\r\nimport s from './MyPosts.module.css';\r\nimport Post from './Post/Post';\r\nimport {Field, reduxForm} from \"redux-form\";\r\nimport {maxLengthCreator, required} from \"../../../utils/validators/validators\";\r\nimport {Textarea} from \"../../Common/FormsControls/FormsControls\";\r\n\r\nconst MyPosts = (props) => {\r\n    let postsElements =\r\n        props.posts.map( p => <Post message={p.message} likesCount={p.likesCount}/>);\r\n\r\n\r\n    let addPost = (values) => {\r\n        props.addPost(values.newPostBody);\r\n    }\r\n\r\n    return (\r\n        <div className={s.postsBlock}>\r\n            <h3>My posts</h3>\r\n            <NewPostForm onSubmit={addPost} props={props}/>\r\n            <div className={s.posts}>\r\n                { postsElements }\r\n            </div>\r\n        </div>\r\n    )\r\n}\r\n\r\nconst maxLength30 = maxLengthCreator(30);\r\n\r\nconst MyPostForm = (props) => {\r\n    return <form onSubmit={props.handleSubmit}>\r\n            <div>\r\n                <Field component={Textarea} name='newPostBody' placeholder='Write your post here!' validate={[required, maxLength30]} />\r\n            </div>\r\n            <div>\r\n                <button>Add post</button>\r\n            </div>\r\n        </form>\r\n}\r\n\r\nlet NewPostForm = reduxForm({form: 'newPostForm'})(MyPostForm)\r\n\r\nexport default MyPosts;","import React from 'react';\r\nimport {addPostActionCreator} from \"../../../redux/profile-reducer\";\r\nimport MyPosts from \"./MyPosts\";\r\nimport {connect} from \"react-redux\";\r\n\r\nconst mapStateToProps = (state) => {\r\n    return {\r\n        posts: state.profilePage.posts,\r\n        newPostText: state.profilePage.newPostText\r\n    }\r\n}\r\n\r\nconst mapDispatchToProps = (dispatch) => {\r\n    return {\r\n        addPost: (postBody) => {\r\n            dispatch(addPostActionCreator(postBody))\r\n        }\r\n    }\r\n}\r\n\r\nconst MyPostsContainer = connect(mapStateToProps, mapDispatchToProps)(MyPosts);\r\n\r\nexport default MyPostsContainer;","import React from 'react';\r\nimport ProfileInfo from \"./ProfileInfo/ProfileInfo\";\r\nimport MyPostsContainer from \"./MyPosts/MyPostsContainer\";\r\n\r\nconst Profile = (props) => {\r\n    return (\r\n        <div>\r\n            <ProfileInfo profile={props.profile} status={props.status} updateStatus={props.updateStatus}/>\r\n            <MyPostsContainer />\r\n        </div>\r\n    )\r\n}\r\n\r\nexport default Profile;","import React from 'react';\r\nimport Profile from \"./Profile\";\r\nimport {connect} from \"react-redux\";\r\nimport {getUser, getUserStatus, updateStatus} from \"../../redux/profile-reducer\";\r\nimport {withRouter} from \"react-router-dom\";\r\nimport {compose} from \"redux\";\r\n\r\nclass ProfileContainer extends React.Component {\r\n\r\n    componentDidMount() {\r\n        console.log(this.props)\r\n        let id = this.props.match.params.id;\r\n        if (!id) {\r\n            id = this.props.authorizedUserId;\r\n        }\r\n        this.props.getUser(id)\r\n        this.props.getUserStatus(id)\r\n    }\r\n\r\n    render() {\r\n\r\n        return (\r\n            <Profile {...this.props} />\r\n        )\r\n    }\r\n}\r\n\r\nlet mapStateToProps = (state) => ({\r\n    profile: state.profilePage.profile,\r\n    status: state.profilePage.status,\r\n    authorizedUserId: state.auth.id,\r\n    isAuth: state.auth.isAuth\r\n});\r\n\r\nlet dispatchACs = {\r\n    getUser,\r\n    getUserStatus,\r\n    updateStatus\r\n}\r\n\r\nexport default compose(connect(mapStateToProps, dispatchACs), withRouter)(ProfileContainer);\r\n\r\n// WithAuthRedirect,","import React from 'react';\r\nimport classes from \"./Header.module.css\";\r\nimport {NavLink} from \"react-router-dom\";\r\n\r\nfunction Header(props) {\r\n    return (\r\n        <header className={classes.header}>\r\n            <img src='https://v1.cosmos.network/img/logo.e561e4f3.png'/>\r\n\r\n            <div className={classes.loginBlock}>\r\n                {props.isAuth ? <div>{ props.login } - <button onClick={props.logOut}>Log Out</button></div>\r\n                    : <NavLink to={'/login'}>Login</NavLink>\r\n                }\r\n            </div>\r\n        </header>\r\n    )\r\n}\r\n\r\nexport default Header;","import {authAPI, usersAPI} from \"../api/api\";\r\nimport {stopSubmit} from \"redux-form\";\r\n\r\nconst SET_USER_DATA = 'SET_USER_DATA'\r\n\r\n\r\nlet initialState = {\r\n    id: null,\r\n    email: null,\r\n    login: null,\r\n    isAuth: false,\r\n}\r\n\r\nconst authReducer = (state = initialState, action) => {\r\n    switch (action.type) {\r\n        case SET_USER_DATA:\r\n            return {\r\n                ...state,\r\n                ...action.payload\r\n            }\r\n\r\n        default:\r\n            return state\r\n    }\r\n}\r\n\r\nexport const setUserData = (id, email, login, isAuth) => ({type: SET_USER_DATA, payload: {id, email, login, isAuth}});\r\n\r\nexport const authMe = () => dispatch => {\r\n    return authAPI.me()\r\n        .then(response => {\r\n            if (response.data.resultCode === 0) {\r\n                let {id, email, login} = response.data.data;\r\n                dispatch(setUserData(id, email, login, true));\r\n            }\r\n        })\r\n}\r\n\r\nexport const logIn = (email, password, rememberMe) => dispatch => {\r\n    authAPI.login(email, password, rememberMe)\r\n        .then(response => {\r\n            if (response.data.resultCode === 0) {\r\n                dispatch(authMe())\r\n            } else {\r\n                let message = response.data.messages.length > 0 ? response.data.messages[0] : 'Common error'\r\n                dispatch(stopSubmit('login', {_error: message}))\r\n            }\r\n        })\r\n}\r\n\r\nexport const logOut = () => dispatch => {\r\n    authAPI.logout()\r\n        .then(response => {\r\n            if (response.data.resultCode === 0) {\r\n                dispatch(setUserData(null, null, null, false));\r\n            }\r\n        })\r\n}\r\n\r\nexport default authReducer;","import React from 'react';\r\nimport Header from \"./Header\";\r\nimport {logOut} from \"../../redux/auth-reduser\";\r\nimport {connect} from \"react-redux\";\r\n\r\nclass HeaderContainer extends React.Component {\r\n\r\n    render() {\r\n        return <Header {...this.props} />\r\n    }\r\n}\r\n\r\nconst mapStateToProps = (state) => {\r\n    return {\r\n        login: state.auth.login,\r\n        isAuth: state.auth.isAuth\r\n    }\r\n}\r\n\r\nconst dispatchACs = {\r\n    logOut\r\n}\r\n\r\nexport default connect(mapStateToProps, dispatchACs)(HeaderContainer);","import React from 'react'\r\nimport {Field, reduxForm} from \"redux-form\";\r\nimport {Input} from \"../Common/FormsControls/FormsControls\";\r\nimport {required} from \"../../utils/validators/validators\";\r\nimport {logIn} from \"../../redux/auth-reduser\";\r\nimport {connect} from \"react-redux\";\r\nimport {Redirect} from \"react-router-dom\";\r\n\r\nconst LoginForm = ({handleSubmit, error}) => {\r\n\r\n    return (\r\n        <form onSubmit={handleSubmit}>\r\n            <div>\r\n                <Field placeholder={'Login'} name={'email'} component={Input} validate={required}/>\r\n            </div>\r\n            <div>\r\n                <Field type='password' name={'password'} placeholder={'password'} component={Input}\r\n                       validate={required}/>\r\n            </div>\r\n            <div>\r\n                <Field type=\"checkbox\" component={Input} name={'rememberMe'}/> Remember me!\r\n            </div>\r\n            <div>\r\n                <button>Login</button>\r\n            </div>\r\n            <div>\r\n                {error}\r\n            </div>\r\n        </form>\r\n    )\r\n}\r\n\r\nconst LoginReduxForm = reduxForm({form: 'login'})(LoginForm)\r\n\r\nconst Login = (props) => {\r\n\r\n    const onSubmit = formData => {\r\n        props.logIn(formData.email, formData.password, formData.rememberMe)\r\n    }\r\n\r\n    if (props.isAuth) {\r\n        return <Redirect to={'/profile'} />\r\n    }\r\n    return <div>\r\n        <h1>Login</h1>\r\n        <LoginReduxForm onSubmit={onSubmit}/>\r\n    </div>\r\n}\r\n\r\nconst mapStateToProps = (state) => ({\r\n    isAuth: state.auth.isAuth\r\n})\r\n\r\nexport default connect(mapStateToProps, {logIn})(Login);","import {authAPI, usersAPI} from \"../api/api\";\r\nimport {stopSubmit} from \"redux-form\";\r\nimport {authMe} from \"./auth-reduser\";\r\n\r\nconst INITIALIZED_SUCCESS = 'INITIALIZED_SUCCESS'\r\n\r\nlet initialState = {\r\n    initialized: false\r\n}\r\n\r\nconst appReducer = (state = initialState, action) => {\r\n    switch (action.type) {\r\n        case INITIALIZED_SUCCESS:\r\n            return {\r\n                ...state,\r\n                initialized: true\r\n            }\r\n\r\n        default:\r\n            return state\r\n    }\r\n}\r\n\r\nexport const initializingSuccess = () => ({type: INITIALIZED_SUCCESS});\r\n\r\nexport const initializeApp = () => dispatch => {\r\n    let promise = dispatch(authMe());\r\n\r\n    promise.then(() => {\r\n        dispatch(initializingSuccess())\r\n    })\r\n}\r\n\r\n\r\nexport default appReducer;","import React from \"react\";\nimport './App.css';\nimport Navbar from './components/Navbar/Navbar';\nimport News from './components/News/News';\nimport Music from './components/Music/Music';\nimport Settings from './components/Settings/Settings';\nimport {BrowserRouter, Route} from 'react-router-dom';\nimport UsersContainer from \"./components/Users/UsersContainer\";\nimport ProfileContainer from \"./components/Profile/ProfileContainer\";\nimport HeaderContainer from \"./components/Header/HeaderContainer\";\nimport Login from \"./components/Login/Login\";\nimport {connect} from \"react-redux\";\nimport {initializeApp} from \"./redux/app-reduser\";\nimport Preloader from \"./components/Common/Preloader\";\nimport {WithSuspense} from \"./components/hoc/WithSuspense\";\n\nconst DialogsContainer = React.lazy( () => import (\"./components/Dialogs/DialogsContainer\"));\n\n\nclass App extends React.Component {\n\n    componentDidMount() {\n        this.props.initializeApp()\n    }\n\n    render() {\n        if (!this.props.initialized) {return <Preloader />}\n\n        return (\n            <BrowserRouter>\n                <div className='app-wrapper'>\n                    <HeaderContainer/>\n                    <Navbar store={this.props.store}/>\n                    <div className='app-wrapper-content'>\n                        <Route path='/profile/:id?' render={() => <ProfileContainer/>}/>\n                        <Route path='/dialogs' render={WithSuspense(DialogsContainer)}/>\n                        <Route path='/users' render={() => <UsersContainer/>}/>\n                        <Route path='/login' render={() => <Login/>}/>\n                        <Route path='/news' render={News}/>\n                        <Route path='/music' render={Music}/>\n                        <Route path='/settings' render={Settings}/>\n                    </div>\n                </div>\n            </BrowserRouter>\n        )\n    }\n}\n\nconst mapStateToProps = (state) => ({\n    initialized: state.app.initialized\n})\n\nexport default connect(mapStateToProps, {initializeApp})(App);","import React from 'react';\r\n\r\nexport const WithSuspense = (Component) => {\r\n\r\n    return (props) => (\r\n        <React.Suspense fallback={<div>Loading...</div>}>\r\n            <Component {...props} />\r\n        </React.Suspense>\r\n    )\r\n}","let initialState = {};\r\n\r\nconst sidebarReducer = (state = initialState, action) => {\r\n    return state;\r\n}\r\n\r\nexport default sidebarReducer;","import {applyMiddleware, combineReducers, compose, createStore} from \"redux\";\r\nimport profileReducer from \"./profile-reducer\";\r\nimport dialogsReducer from \"./dialogs-reducer\";\r\nimport sidebarReducer from \"./sidebar-reducer\";\r\nimport usersReducer from \"./users-reducer\";\r\nimport authReducer from \"./auth-reduser\";\r\nimport {reducer as formReducer} from 'redux-form'\r\nimport thunk from 'redux-thunk'\r\nimport appReducer from \"./app-reduser\";\r\n\r\nlet reducers = combineReducers({\r\n    profilePage: profileReducer,\r\n    dialogsPage: dialogsReducer,\r\n    sidebar: sidebarReducer,\r\n    usersPage: usersReducer,\r\n    auth: authReducer,\r\n    form: formReducer,\r\n    app: appReducer\r\n});\r\n\r\nconst composeEnhancers = window.__REDUX_DEVTOOLS_EXTENSION_COMPOSE__ || compose;\r\nconst store = createStore(reducers, composeEnhancers(applyMiddleware(thunk)\r\n));\r\n\r\nwindow.__store__ = store;\r\n\r\nexport default store;","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport App from './App';\nimport store from './redux/redux-store'\nimport {Provider} from \"react-redux\";\n\nReactDOM.render(\n    <Provider store={store}>\n        <App/>\n    </Provider>\n    , document.getElementById('root')\n);\n","export const required = (value) => {\r\n    if (value) return undefined;\r\n\r\n    return 'Field is required';\r\n}\r\n\r\nexport const maxLengthCreator = (maxLength) => (value) => {\r\n    if (value.length > maxLength) return `Max length is ${maxLength} symbols`;\r\n    return undefined;\r\n}\r\n","import React from 'react'\r\nimport classes from './FormsControls.module.css'\r\n\r\nconst FormControler = ({input, meta, ...props}) => {\r\n    let hasError = meta.touched && meta.error;\r\n\r\n    return (\r\n        <div className={classes.formControl + ' ' + (hasError ? classes.error : '')}>\r\n            <div>\r\n                {props.children}\r\n            </div>\r\n            {hasError && <span>{meta.error}</span>}\r\n        </div>\r\n    )\r\n}\r\n\r\nexport const Textarea = (props) => {\r\n    const {input, meta, child, ...restProps} = props;\r\n\r\n    return <FormControler {...props}><textarea {...input} {...restProps}/></FormControler>\r\n}\r\n\r\nexport const Input = (props) => {\r\n    const {input, meta, child, ...restProps} = props;\r\n\r\n    return <FormControler {...props}><input {...input} {...restProps}/></FormControler>\r\n}\r\n","// extracted by mini-css-extract-plugin\nmodule.exports = {\"postsBlock\":\"MyPosts_postsBlock__1e0Qb\",\"posts\":\"MyPosts_posts__7O9L7\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"formControl\":\"FormsControls_formControl__2zzbA\",\"error\":\"FormsControls_error__1ZSZL\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"header\":\"Header_header__obYEB\",\"loginBlock\":\"Header_loginBlock__29Qec\"};"],"sourceRoot":""}